<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAA5CAYAAAB0+HhyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DwAACw8BkvkDpQAAA4RJREFUaEPN2kuoTVEcx/HrFSGPgQFuyivkESNkQJEYMKBk4BFJUggxUTdKlDJB
        MVGMMJCYCOU1kBFiIOQRMZBHUUh0fP9H5/S/29p7rfVf61z3V5/BOZ291vp17tl3v9pqtVqbMctwDpex
        HxPxX1LvYCxyFLJh0SF0eaxFpkAvvug2eiFnxuIInuARNqEZa5HN0At3uYtc2Q3XHCdRj7XINugBy5xH
        SgbjKlxjN+yBucg66MGqbIElk/EWrjGL2q1F5kMP5DMCMZmLn3CN5dJhLTIMeiCfWwjNYrjGqHLWWkTy
        EnownwXwZQlc2/qsTilyBnownzeoivxzdW1X5TWW428HY5GYH3yD7LZdWQHX56s8xhDUk1JkDPTAIeQH
        3Bs6K+H6bJXPkF1zMylFJM+hJwhxGI2sgeszPnJk0SmpRU5ATxCqH2J34Q3yDf6T1CKWXaV44XgvxHE4
        k1qkD75DT9YqUr40qUUkl6AnbBU5+i1NjiJyOK0nbIUdqEyOIqOhJ80t6HQgRxHJK+jJcxoOb3IVOQU9
        eS5yQhWUXEXWQy8gBzmlDU6uIjOhF5HDNAQnV5GhiDkR8jmNqOQqInkKvRirX+iPqOQsIpeA9IKsdiE6
        OYtcgV6QxQeYkqtID7yDXpTFBpiSq8h16AVZvIc5OYqUXQOO1QFzUotshV5MigkwJ6WI9aSqzEiYYy0y
        CXoROSyFOZYig/ARehE5RP8317EUeQi9gFy+onipKDixRS5CT56bXPQzJaaIXI/Sk7ZC1KG7TmiRjdAT
        ttI8RCekiPVCmpXcH4yOr0g79CRdZSGi4ivyDHqCriL3XqJSVeQC9OCx5EDyYOG9GHsRnLIiO6EHjfUD
        AyCxXugW4xAUV5Gp0INZzIZO7N2thgcIiquI3CLTg8VaBVesf6pBx2DFIsegB4klD9ZU5Rpc21WR35k3
        usgceZ0g9CmHO3BtX6byKnwjukjKt3EPoemJ+3CNU+T7hpvRRcbLa4NPGIiY9IXvPv0XBEcXkcg1JT1Y
        CHlmxBJ5eqLqvGYtglMsIok531iElMj/iW8ojiv30KPiKiI/Lj1omU4PfiVkOn5Djy07nqi4ikjkVpce
        uGgfcmYG5LcmY9+UN2JTVkRyA42Fa7J3a0XkztQBjKq/ikxVETlWkvNoXULuTHXLVBWRzEKjRPP5we4Y
        XxHJdujnR7plarVa2x+x9/48pCogEwAAAABJRU5ErkJggg==
</value>
  </data>
</root>